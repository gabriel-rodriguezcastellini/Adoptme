paths:
  /api/users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/users/{uid}:
    get:
      summary: Get a user by ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      summary: Update a user by ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
    delete:
      summary: Delete a user by ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: User deleted successfully
  /api/users/{uid}/documents:
    post:
      summary: Upload documents for a user
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Documents uploaded successfully

components:
  schemas:
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        role:
          type: string
        pets:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              reference:
                type: string
        last_connection:
          type: string
          format: date-time
